//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DXC.Technology.UnitTesting.Helpers {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("UnitTestOverviewDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class UnitTestOverviewDataSet : global::System.Data.DataSet {
        
        private UnitTestResultDataTable tableUnitTestResult;
        
        private UnitTestDetailDataTable tableUnitTestDetail;
        
        private ThreadStatisticsDataTable tableThreadStatistics;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UnitTestOverviewDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
            " or extended by application code.", DiagnosticId="SYSLIB0051")]
        protected UnitTestOverviewDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["UnitTestResult"] != null)) {
                    base.Tables.Add(new UnitTestResultDataTable(ds.Tables["UnitTestResult"]));
                }
                if ((ds.Tables["UnitTestDetail"] != null)) {
                    base.Tables.Add(new UnitTestDetailDataTable(ds.Tables["UnitTestDetail"]));
                }
                if ((ds.Tables["ThreadStatistics"] != null)) {
                    base.Tables.Add(new ThreadStatisticsDataTable(ds.Tables["ThreadStatistics"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UnitTestResultDataTable UnitTestResult {
            get {
                return this.tableUnitTestResult;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UnitTestDetailDataTable UnitTestDetail {
            get {
                return this.tableUnitTestDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ThreadStatisticsDataTable ThreadStatistics {
            get {
                return this.tableThreadStatistics;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            UnitTestOverviewDataSet cln = ((UnitTestOverviewDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["UnitTestResult"] != null)) {
                    base.Tables.Add(new UnitTestResultDataTable(ds.Tables["UnitTestResult"]));
                }
                if ((ds.Tables["UnitTestDetail"] != null)) {
                    base.Tables.Add(new UnitTestDetailDataTable(ds.Tables["UnitTestDetail"]));
                }
                if ((ds.Tables["ThreadStatistics"] != null)) {
                    base.Tables.Add(new ThreadStatisticsDataTable(ds.Tables["ThreadStatistics"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableUnitTestResult = ((UnitTestResultDataTable)(base.Tables["UnitTestResult"]));
            if ((initTable == true)) {
                if ((this.tableUnitTestResult != null)) {
                    this.tableUnitTestResult.InitVars();
                }
            }
            this.tableUnitTestDetail = ((UnitTestDetailDataTable)(base.Tables["UnitTestDetail"]));
            if ((initTable == true)) {
                if ((this.tableUnitTestDetail != null)) {
                    this.tableUnitTestDetail.InitVars();
                }
            }
            this.tableThreadStatistics = ((ThreadStatisticsDataTable)(base.Tables["ThreadStatistics"]));
            if ((initTable == true)) {
                if ((this.tableThreadStatistics != null)) {
                    this.tableThreadStatistics.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "UnitTestOverviewDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/UnitTestOverviewDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableUnitTestResult = new UnitTestResultDataTable();
            base.Tables.Add(this.tableUnitTestResult);
            this.tableUnitTestDetail = new UnitTestDetailDataTable();
            base.Tables.Add(this.tableUnitTestDetail);
            this.tableThreadStatistics = new ThreadStatisticsDataTable();
            base.Tables.Add(this.tableThreadStatistics);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeUnitTestResult() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeUnitTestDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeThreadStatistics() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            UnitTestOverviewDataSet ds = new UnitTestOverviewDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void UnitTestResultRowChangeEventHandler(object sender, UnitTestResultRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void UnitTestDetailRowChangeEventHandler(object sender, UnitTestDetailRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ThreadStatisticsRowChangeEventHandler(object sender, ThreadStatisticsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UnitTestResultDataTable : global::System.Data.TypedTableBase<UnitTestResultRow> {
            
            private global::System.Data.DataColumn columnTestType;
            
            private global::System.Data.DataColumn columnTestClass;
            
            private global::System.Data.DataColumn columnTestMethod;
            
            private global::System.Data.DataColumn columnTotalTestTypeCount;
            
            private global::System.Data.DataColumn columnTotalTestClassCount;
            
            private global::System.Data.DataColumn columnTotalTestMethodCount;
            
            private global::System.Data.DataColumn columnTotalTestMethodPassedCount;
            
            private global::System.Data.DataColumn columnTotalTestMethodFailedCount;
            
            private global::System.Data.DataColumn columnTotalTestMethodTimeoutCount;
            
            private global::System.Data.DataColumn columnTotalAssertsCount;
            
            private global::System.Data.DataColumn columnTotalAssertsFailedCount;
            
            private global::System.Data.DataColumn columnAreEqualCount;
            
            private global::System.Data.DataColumn columnAreEqualFailedCount;
            
            private global::System.Data.DataColumn columnAreNotEqualCount;
            
            private global::System.Data.DataColumn columnAreNotEqualFailedCount;
            
            private global::System.Data.DataColumn columnAreNotSameCount;
            
            private global::System.Data.DataColumn columnAreNotSameFailedCount;
            
            private global::System.Data.DataColumn columnAreSameCount;
            
            private global::System.Data.DataColumn columnAreSameFailedCount;
            
            private global::System.Data.DataColumn columnExceptionAssertCount;
            
            private global::System.Data.DataColumn columnFailCount;
            
            private global::System.Data.DataColumn columnFailFailedCount;
            
            private global::System.Data.DataColumn columnInconclusiveCount;
            
            private global::System.Data.DataColumn columnIsFalseCount;
            
            private global::System.Data.DataColumn columnIsFalseFailedCount;
            
            private global::System.Data.DataColumn columnIsInstanceOfTypeCount;
            
            private global::System.Data.DataColumn columnIsInstanceOfTypeFailedCount;
            
            private global::System.Data.DataColumn columnIsNotInstanceOfTypeCount;
            
            private global::System.Data.DataColumn columnIsNotInstanceOfTypeFailedCount;
            
            private global::System.Data.DataColumn columnIsNotNullCount;
            
            private global::System.Data.DataColumn columnIsNotNullFailedCount;
            
            private global::System.Data.DataColumn columnIsNullCount;
            
            private global::System.Data.DataColumn columnIsNullFailedCount;
            
            private global::System.Data.DataColumn columnIsTrueCount;
            
            private global::System.Data.DataColumn columnIsTrueFailedCount;
            
            private global::System.Data.DataColumn columnStartDateTime;
            
            private global::System.Data.DataColumn columnEndDateTime;
            
            private global::System.Data.DataColumn columnDurationInMilliSeconds;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestResultDataTable() {
                this.TableName = "UnitTestResult";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal UnitTestResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected UnitTestResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TestTypeColumn {
                get {
                    return this.columnTestType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TestClassColumn {
                get {
                    return this.columnTestClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TestMethodColumn {
                get {
                    return this.columnTestMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalTestTypeCountColumn {
                get {
                    return this.columnTotalTestTypeCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalTestClassCountColumn {
                get {
                    return this.columnTotalTestClassCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalTestMethodCountColumn {
                get {
                    return this.columnTotalTestMethodCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalTestMethodPassedCountColumn {
                get {
                    return this.columnTotalTestMethodPassedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalTestMethodFailedCountColumn {
                get {
                    return this.columnTotalTestMethodFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalTestMethodTimeoutCountColumn {
                get {
                    return this.columnTotalTestMethodTimeoutCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalAssertsCountColumn {
                get {
                    return this.columnTotalAssertsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalAssertsFailedCountColumn {
                get {
                    return this.columnTotalAssertsFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AreEqualCountColumn {
                get {
                    return this.columnAreEqualCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AreEqualFailedCountColumn {
                get {
                    return this.columnAreEqualFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AreNotEqualCountColumn {
                get {
                    return this.columnAreNotEqualCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AreNotEqualFailedCountColumn {
                get {
                    return this.columnAreNotEqualFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AreNotSameCountColumn {
                get {
                    return this.columnAreNotSameCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AreNotSameFailedCountColumn {
                get {
                    return this.columnAreNotSameFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AreSameCountColumn {
                get {
                    return this.columnAreSameCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AreSameFailedCountColumn {
                get {
                    return this.columnAreSameFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ExceptionAssertCountColumn {
                get {
                    return this.columnExceptionAssertCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FailCountColumn {
                get {
                    return this.columnFailCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FailFailedCountColumn {
                get {
                    return this.columnFailFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InconclusiveCountColumn {
                get {
                    return this.columnInconclusiveCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsFalseCountColumn {
                get {
                    return this.columnIsFalseCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsFalseFailedCountColumn {
                get {
                    return this.columnIsFalseFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsInstanceOfTypeCountColumn {
                get {
                    return this.columnIsInstanceOfTypeCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsInstanceOfTypeFailedCountColumn {
                get {
                    return this.columnIsInstanceOfTypeFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsNotInstanceOfTypeCountColumn {
                get {
                    return this.columnIsNotInstanceOfTypeCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsNotInstanceOfTypeFailedCountColumn {
                get {
                    return this.columnIsNotInstanceOfTypeFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsNotNullCountColumn {
                get {
                    return this.columnIsNotNullCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsNotNullFailedCountColumn {
                get {
                    return this.columnIsNotNullFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsNullCountColumn {
                get {
                    return this.columnIsNullCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsNullFailedCountColumn {
                get {
                    return this.columnIsNullFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsTrueCountColumn {
                get {
                    return this.columnIsTrueCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsTrueFailedCountColumn {
                get {
                    return this.columnIsTrueFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StartDateTimeColumn {
                get {
                    return this.columnStartDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EndDateTimeColumn {
                get {
                    return this.columnEndDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DurationInMilliSecondsColumn {
                get {
                    return this.columnDurationInMilliSeconds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestResultRow this[int index] {
                get {
                    return ((UnitTestResultRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UnitTestResultRowChangeEventHandler UnitTestResultRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UnitTestResultRowChangeEventHandler UnitTestResultRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UnitTestResultRowChangeEventHandler UnitTestResultRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UnitTestResultRowChangeEventHandler UnitTestResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddUnitTestResultRow(UnitTestResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestResultRow AddUnitTestResultRow(
                        string TestType, 
                        string TestClass, 
                        string TestMethod, 
                        int TotalTestTypeCount, 
                        int TotalTestClassCount, 
                        int TotalTestMethodCount, 
                        int TotalTestMethodPassedCount, 
                        int TotalTestMethodFailedCount, 
                        int TotalTestMethodTimeoutCount, 
                        int TotalAssertsCount, 
                        int TotalAssertsFailedCount, 
                        int AreEqualCount, 
                        int AreEqualFailedCount, 
                        int AreNotEqualCount, 
                        int AreNotEqualFailedCount, 
                        int AreNotSameCount, 
                        int AreNotSameFailedCount, 
                        int AreSameCount, 
                        int AreSameFailedCount, 
                        int ExceptionAssertCount, 
                        int FailCount, 
                        int FailFailedCount, 
                        int InconclusiveCount, 
                        int IsFalseCount, 
                        int IsFalseFailedCount, 
                        int IsInstanceOfTypeCount, 
                        int IsInstanceOfTypeFailedCount, 
                        int IsNotInstanceOfTypeCount, 
                        int IsNotInstanceOfTypeFailedCount, 
                        int IsNotNullCount, 
                        int IsNotNullFailedCount, 
                        int IsNullCount, 
                        int IsNullFailedCount, 
                        int IsTrueCount, 
                        int IsTrueFailedCount, 
                        System.DateTime StartDateTime, 
                        System.DateTime EndDateTime, 
                        double DurationInMilliSeconds) {
                UnitTestResultRow rowUnitTestResultRow = ((UnitTestResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TestType,
                        TestClass,
                        TestMethod,
                        TotalTestTypeCount,
                        TotalTestClassCount,
                        TotalTestMethodCount,
                        TotalTestMethodPassedCount,
                        TotalTestMethodFailedCount,
                        TotalTestMethodTimeoutCount,
                        TotalAssertsCount,
                        TotalAssertsFailedCount,
                        AreEqualCount,
                        AreEqualFailedCount,
                        AreNotEqualCount,
                        AreNotEqualFailedCount,
                        AreNotSameCount,
                        AreNotSameFailedCount,
                        AreSameCount,
                        AreSameFailedCount,
                        ExceptionAssertCount,
                        FailCount,
                        FailFailedCount,
                        InconclusiveCount,
                        IsFalseCount,
                        IsFalseFailedCount,
                        IsInstanceOfTypeCount,
                        IsInstanceOfTypeFailedCount,
                        IsNotInstanceOfTypeCount,
                        IsNotInstanceOfTypeFailedCount,
                        IsNotNullCount,
                        IsNotNullFailedCount,
                        IsNullCount,
                        IsNullFailedCount,
                        IsTrueCount,
                        IsTrueFailedCount,
                        StartDateTime,
                        EndDateTime,
                        DurationInMilliSeconds};
                rowUnitTestResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUnitTestResultRow);
                return rowUnitTestResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestResultRow FindByTestTypeTestClassTestMethod(string TestType, string TestClass, string TestMethod) {
                return ((UnitTestResultRow)(this.Rows.Find(new object[] {
                            TestType,
                            TestClass,
                            TestMethod})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UnitTestResultDataTable cln = ((UnitTestResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UnitTestResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnTestType = base.Columns["TestType"];
                this.columnTestClass = base.Columns["TestClass"];
                this.columnTestMethod = base.Columns["TestMethod"];
                this.columnTotalTestTypeCount = base.Columns["TotalTestTypeCount"];
                this.columnTotalTestClassCount = base.Columns["TotalTestClassCount"];
                this.columnTotalTestMethodCount = base.Columns["TotalTestMethodCount"];
                this.columnTotalTestMethodPassedCount = base.Columns["TotalTestMethodPassedCount"];
                this.columnTotalTestMethodFailedCount = base.Columns["TotalTestMethodFailedCount"];
                this.columnTotalTestMethodTimeoutCount = base.Columns["TotalTestMethodTimeoutCount"];
                this.columnTotalAssertsCount = base.Columns["TotalAssertsCount"];
                this.columnTotalAssertsFailedCount = base.Columns["TotalAssertsFailedCount"];
                this.columnAreEqualCount = base.Columns["AreEqualCount"];
                this.columnAreEqualFailedCount = base.Columns["AreEqualFailedCount"];
                this.columnAreNotEqualCount = base.Columns["AreNotEqualCount"];
                this.columnAreNotEqualFailedCount = base.Columns["AreNotEqualFailedCount"];
                this.columnAreNotSameCount = base.Columns["AreNotSameCount"];
                this.columnAreNotSameFailedCount = base.Columns["AreNotSameFailedCount"];
                this.columnAreSameCount = base.Columns["AreSameCount"];
                this.columnAreSameFailedCount = base.Columns["AreSameFailedCount"];
                this.columnExceptionAssertCount = base.Columns["ExceptionAssertCount"];
                this.columnFailCount = base.Columns["FailCount"];
                this.columnFailFailedCount = base.Columns["FailFailedCount"];
                this.columnInconclusiveCount = base.Columns["InconclusiveCount"];
                this.columnIsFalseCount = base.Columns["IsFalseCount"];
                this.columnIsFalseFailedCount = base.Columns["IsFalseFailedCount"];
                this.columnIsInstanceOfTypeCount = base.Columns["IsInstanceOfTypeCount"];
                this.columnIsInstanceOfTypeFailedCount = base.Columns["IsInstanceOfTypeFailedCount"];
                this.columnIsNotInstanceOfTypeCount = base.Columns["IsNotInstanceOfTypeCount"];
                this.columnIsNotInstanceOfTypeFailedCount = base.Columns["IsNotInstanceOfTypeFailedCount"];
                this.columnIsNotNullCount = base.Columns["IsNotNullCount"];
                this.columnIsNotNullFailedCount = base.Columns["IsNotNullFailedCount"];
                this.columnIsNullCount = base.Columns["IsNullCount"];
                this.columnIsNullFailedCount = base.Columns["IsNullFailedCount"];
                this.columnIsTrueCount = base.Columns["IsTrueCount"];
                this.columnIsTrueFailedCount = base.Columns["IsTrueFailedCount"];
                this.columnStartDateTime = base.Columns["StartDateTime"];
                this.columnEndDateTime = base.Columns["EndDateTime"];
                this.columnDurationInMilliSeconds = base.Columns["DurationInMilliSeconds"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnTestType = new global::System.Data.DataColumn("TestType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestType);
                this.columnTestClass = new global::System.Data.DataColumn("TestClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestClass);
                this.columnTestMethod = new global::System.Data.DataColumn("TestMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestMethod);
                this.columnTotalTestTypeCount = new global::System.Data.DataColumn("TotalTestTypeCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTestTypeCount);
                this.columnTotalTestClassCount = new global::System.Data.DataColumn("TotalTestClassCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTestClassCount);
                this.columnTotalTestMethodCount = new global::System.Data.DataColumn("TotalTestMethodCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTestMethodCount);
                this.columnTotalTestMethodPassedCount = new global::System.Data.DataColumn("TotalTestMethodPassedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTestMethodPassedCount);
                this.columnTotalTestMethodFailedCount = new global::System.Data.DataColumn("TotalTestMethodFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTestMethodFailedCount);
                this.columnTotalTestMethodTimeoutCount = new global::System.Data.DataColumn("TotalTestMethodTimeoutCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTestMethodTimeoutCount);
                this.columnTotalAssertsCount = new global::System.Data.DataColumn("TotalAssertsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAssertsCount);
                this.columnTotalAssertsFailedCount = new global::System.Data.DataColumn("TotalAssertsFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAssertsFailedCount);
                this.columnAreEqualCount = new global::System.Data.DataColumn("AreEqualCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreEqualCount);
                this.columnAreEqualFailedCount = new global::System.Data.DataColumn("AreEqualFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreEqualFailedCount);
                this.columnAreNotEqualCount = new global::System.Data.DataColumn("AreNotEqualCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreNotEqualCount);
                this.columnAreNotEqualFailedCount = new global::System.Data.DataColumn("AreNotEqualFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreNotEqualFailedCount);
                this.columnAreNotSameCount = new global::System.Data.DataColumn("AreNotSameCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreNotSameCount);
                this.columnAreNotSameFailedCount = new global::System.Data.DataColumn("AreNotSameFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreNotSameFailedCount);
                this.columnAreSameCount = new global::System.Data.DataColumn("AreSameCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreSameCount);
                this.columnAreSameFailedCount = new global::System.Data.DataColumn("AreSameFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreSameFailedCount);
                this.columnExceptionAssertCount = new global::System.Data.DataColumn("ExceptionAssertCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExceptionAssertCount);
                this.columnFailCount = new global::System.Data.DataColumn("FailCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFailCount);
                this.columnFailFailedCount = new global::System.Data.DataColumn("FailFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFailFailedCount);
                this.columnInconclusiveCount = new global::System.Data.DataColumn("InconclusiveCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInconclusiveCount);
                this.columnIsFalseCount = new global::System.Data.DataColumn("IsFalseCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFalseCount);
                this.columnIsFalseFailedCount = new global::System.Data.DataColumn("IsFalseFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFalseFailedCount);
                this.columnIsInstanceOfTypeCount = new global::System.Data.DataColumn("IsInstanceOfTypeCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsInstanceOfTypeCount);
                this.columnIsInstanceOfTypeFailedCount = new global::System.Data.DataColumn("IsInstanceOfTypeFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsInstanceOfTypeFailedCount);
                this.columnIsNotInstanceOfTypeCount = new global::System.Data.DataColumn("IsNotInstanceOfTypeCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNotInstanceOfTypeCount);
                this.columnIsNotInstanceOfTypeFailedCount = new global::System.Data.DataColumn("IsNotInstanceOfTypeFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNotInstanceOfTypeFailedCount);
                this.columnIsNotNullCount = new global::System.Data.DataColumn("IsNotNullCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNotNullCount);
                this.columnIsNotNullFailedCount = new global::System.Data.DataColumn("IsNotNullFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNotNullFailedCount);
                this.columnIsNullCount = new global::System.Data.DataColumn("IsNullCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNullCount);
                this.columnIsNullFailedCount = new global::System.Data.DataColumn("IsNullFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNullFailedCount);
                this.columnIsTrueCount = new global::System.Data.DataColumn("IsTrueCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTrueCount);
                this.columnIsTrueFailedCount = new global::System.Data.DataColumn("IsTrueFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTrueFailedCount);
                this.columnStartDateTime = new global::System.Data.DataColumn("StartDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDateTime);
                this.columnEndDateTime = new global::System.Data.DataColumn("EndDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDateTime);
                this.columnDurationInMilliSeconds = new global::System.Data.DataColumn("DurationInMilliSeconds", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDurationInMilliSeconds);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("UnitTestResultKey1", new global::System.Data.DataColumn[] {
                                this.columnTestType,
                                this.columnTestClass,
                                this.columnTestMethod}, true));
                this.columnTestType.AllowDBNull = false;
                this.columnTestClass.AllowDBNull = false;
                this.columnTestClass.DefaultValue = ((string)("0"));
                this.columnTestMethod.AllowDBNull = false;
                this.columnTestMethod.DefaultValue = ((string)("0"));
                this.columnTotalTestTypeCount.DefaultValue = ((int)(0));
                this.columnTotalTestClassCount.Caption = "TotalTestTypeCount";
                this.columnTotalTestClassCount.DefaultValue = ((int)(0));
                this.columnTotalTestMethodCount.Caption = "TotalTestTypeCount";
                this.columnTotalTestMethodCount.DefaultValue = ((int)(0));
                this.columnTotalTestMethodPassedCount.Caption = "TotalTestTypeCount";
                this.columnTotalTestMethodPassedCount.DefaultValue = ((int)(0));
                this.columnTotalTestMethodFailedCount.Caption = "TotalTestTypeCount";
                this.columnTotalTestMethodFailedCount.DefaultValue = ((int)(0));
                this.columnTotalTestMethodTimeoutCount.Caption = "TotalTestTypeCount";
                this.columnTotalTestMethodTimeoutCount.DefaultValue = ((int)(0));
                this.columnTotalAssertsCount.Caption = "TotalAsserts";
                this.columnTotalAssertsCount.DefaultValue = ((int)(0));
                this.columnTotalAssertsFailedCount.Caption = "TotalAsserts";
                this.columnTotalAssertsFailedCount.DefaultValue = ((int)(0));
                this.columnAreEqualCount.Caption = "DataColumn1";
                this.columnAreEqualCount.DefaultValue = ((int)(0));
                this.columnAreEqualFailedCount.Caption = "DataColumn1";
                this.columnAreEqualFailedCount.DefaultValue = ((int)(0));
                this.columnAreNotEqualCount.Caption = "DataColumn1";
                this.columnAreNotEqualCount.DefaultValue = ((int)(0));
                this.columnAreNotEqualFailedCount.Caption = "DataColumn1";
                this.columnAreNotEqualFailedCount.DefaultValue = ((int)(0));
                this.columnAreNotSameCount.Caption = "DataColumn1";
                this.columnAreNotSameCount.DefaultValue = ((int)(0));
                this.columnAreNotSameFailedCount.Caption = "DataColumn1";
                this.columnAreNotSameFailedCount.DefaultValue = ((int)(0));
                this.columnAreSameCount.Caption = "DataColumn1";
                this.columnAreSameCount.DefaultValue = ((int)(0));
                this.columnAreSameFailedCount.Caption = "DataColumn1";
                this.columnAreSameFailedCount.DefaultValue = ((int)(0));
                this.columnExceptionAssertCount.Caption = "DataColumn1";
                this.columnExceptionAssertCount.DefaultValue = ((int)(0));
                this.columnFailCount.Caption = "DataColumn1";
                this.columnFailCount.DefaultValue = ((int)(0));
                this.columnFailFailedCount.Caption = "DataColumn1";
                this.columnFailFailedCount.DefaultValue = ((int)(0));
                this.columnInconclusiveCount.Caption = "DataColumn1";
                this.columnInconclusiveCount.DefaultValue = ((int)(0));
                this.columnIsFalseCount.Caption = "DataColumn1";
                this.columnIsFalseCount.DefaultValue = ((int)(0));
                this.columnIsFalseFailedCount.Caption = "DataColumn1";
                this.columnIsFalseFailedCount.DefaultValue = ((int)(0));
                this.columnIsInstanceOfTypeCount.Caption = "DataColumn1";
                this.columnIsInstanceOfTypeCount.DefaultValue = ((int)(0));
                this.columnIsInstanceOfTypeFailedCount.Caption = "DataColumn1";
                this.columnIsInstanceOfTypeFailedCount.DefaultValue = ((int)(0));
                this.columnIsNotInstanceOfTypeCount.Caption = "DataColumn1";
                this.columnIsNotInstanceOfTypeCount.DefaultValue = ((int)(0));
                this.columnIsNotInstanceOfTypeFailedCount.Caption = "DataColumn1";
                this.columnIsNotInstanceOfTypeFailedCount.DefaultValue = ((int)(0));
                this.columnIsNotNullCount.Caption = "DataColumn1";
                this.columnIsNotNullCount.DefaultValue = ((int)(0));
                this.columnIsNotNullFailedCount.Caption = "DataColumn1";
                this.columnIsNotNullFailedCount.DefaultValue = ((int)(0));
                this.columnIsNullCount.Caption = "DataColumn1";
                this.columnIsNullCount.DefaultValue = ((int)(0));
                this.columnIsNullFailedCount.Caption = "DataColumn1";
                this.columnIsNullFailedCount.DefaultValue = ((int)(0));
                this.columnIsTrueCount.Caption = "DataColumn1";
                this.columnIsTrueCount.DefaultValue = ((int)(0));
                this.columnIsTrueFailedCount.Caption = "DataColumn1";
                this.columnIsTrueFailedCount.DefaultValue = ((int)(0));
                this.columnEndDateTime.Caption = "StartDateTime";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestResultRow NewUnitTestResultRow() {
                return ((UnitTestResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UnitTestResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UnitTestResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UnitTestResultRowChanged != null)) {
                    this.UnitTestResultRowChanged(this, new UnitTestResultRowChangeEvent(((UnitTestResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UnitTestResultRowChanging != null)) {
                    this.UnitTestResultRowChanging(this, new UnitTestResultRowChangeEvent(((UnitTestResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UnitTestResultRowDeleted != null)) {
                    this.UnitTestResultRowDeleted(this, new UnitTestResultRowChangeEvent(((UnitTestResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UnitTestResultRowDeleting != null)) {
                    this.UnitTestResultRowDeleting(this, new UnitTestResultRowChangeEvent(((UnitTestResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveUnitTestResultRow(UnitTestResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UnitTestOverviewDataSet ds = new UnitTestOverviewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UnitTestResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UnitTestDetailDataTable : global::System.Data.TypedTableBase<UnitTestDetailRow> {
            
            private global::System.Data.DataColumn columnThreadID;
            
            private global::System.Data.DataColumn columnTestType;
            
            private global::System.Data.DataColumn columnTestClass;
            
            private global::System.Data.DataColumn columnTestMethod;
            
            private global::System.Data.DataColumn columnAssertType;
            
            private global::System.Data.DataColumn columnWasSuccessful;
            
            private global::System.Data.DataColumn columnComment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestDetailDataTable() {
                this.TableName = "UnitTestDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal UnitTestDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected UnitTestDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ThreadIDColumn {
                get {
                    return this.columnThreadID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TestTypeColumn {
                get {
                    return this.columnTestType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TestClassColumn {
                get {
                    return this.columnTestClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TestMethodColumn {
                get {
                    return this.columnTestMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AssertTypeColumn {
                get {
                    return this.columnAssertType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WasSuccessfulColumn {
                get {
                    return this.columnWasSuccessful;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestDetailRow this[int index] {
                get {
                    return ((UnitTestDetailRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UnitTestDetailRowChangeEventHandler UnitTestDetailRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UnitTestDetailRowChangeEventHandler UnitTestDetailRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UnitTestDetailRowChangeEventHandler UnitTestDetailRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event UnitTestDetailRowChangeEventHandler UnitTestDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddUnitTestDetailRow(UnitTestDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestDetailRow AddUnitTestDetailRow(string ThreadID, string TestType, string TestClass, string TestMethod, string AssertType, bool WasSuccessful, string Comment) {
                UnitTestDetailRow rowUnitTestDetailRow = ((UnitTestDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ThreadID,
                        TestType,
                        TestClass,
                        TestMethod,
                        AssertType,
                        WasSuccessful,
                        Comment};
                rowUnitTestDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUnitTestDetailRow);
                return rowUnitTestDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UnitTestDetailDataTable cln = ((UnitTestDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UnitTestDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnThreadID = base.Columns["ThreadID"];
                this.columnTestType = base.Columns["TestType"];
                this.columnTestClass = base.Columns["TestClass"];
                this.columnTestMethod = base.Columns["TestMethod"];
                this.columnAssertType = base.Columns["AssertType"];
                this.columnWasSuccessful = base.Columns["WasSuccessful"];
                this.columnComment = base.Columns["Comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnThreadID = new global::System.Data.DataColumn("ThreadID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThreadID);
                this.columnTestType = new global::System.Data.DataColumn("TestType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestType);
                this.columnTestClass = new global::System.Data.DataColumn("TestClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestClass);
                this.columnTestMethod = new global::System.Data.DataColumn("TestMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestMethod);
                this.columnAssertType = new global::System.Data.DataColumn("AssertType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssertType);
                this.columnWasSuccessful = new global::System.Data.DataColumn("WasSuccessful", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWasSuccessful);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnTestType.AllowDBNull = false;
                this.columnTestClass.AllowDBNull = false;
                this.columnTestMethod.AllowDBNull = false;
                this.columnAssertType.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestDetailRow NewUnitTestDetailRow() {
                return ((UnitTestDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UnitTestDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UnitTestDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UnitTestDetailRowChanged != null)) {
                    this.UnitTestDetailRowChanged(this, new UnitTestDetailRowChangeEvent(((UnitTestDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UnitTestDetailRowChanging != null)) {
                    this.UnitTestDetailRowChanging(this, new UnitTestDetailRowChangeEvent(((UnitTestDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UnitTestDetailRowDeleted != null)) {
                    this.UnitTestDetailRowDeleted(this, new UnitTestDetailRowChangeEvent(((UnitTestDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UnitTestDetailRowDeleting != null)) {
                    this.UnitTestDetailRowDeleting(this, new UnitTestDetailRowChangeEvent(((UnitTestDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveUnitTestDetailRow(UnitTestDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UnitTestOverviewDataSet ds = new UnitTestOverviewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UnitTestDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ThreadStatisticsDataTable : global::System.Data.TypedTableBase<ThreadStatisticsRow> {
            
            private global::System.Data.DataColumn columnThreadID;
            
            private global::System.Data.DataColumn columnCurrentTestType;
            
            private global::System.Data.DataColumn columnCurrentTestClass;
            
            private global::System.Data.DataColumn columnCurrentTestMethod;
            
            private global::System.Data.DataColumn columnCurrentTestComment;
            
            private global::System.Data.DataColumn columnTotalAssertsCount;
            
            private global::System.Data.DataColumn columnTotalAssertsFailedCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ThreadStatisticsDataTable() {
                this.TableName = "ThreadStatistics";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ThreadStatisticsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected ThreadStatisticsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ThreadIDColumn {
                get {
                    return this.columnThreadID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CurrentTestTypeColumn {
                get {
                    return this.columnCurrentTestType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CurrentTestClassColumn {
                get {
                    return this.columnCurrentTestClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CurrentTestMethodColumn {
                get {
                    return this.columnCurrentTestMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CurrentTestCommentColumn {
                get {
                    return this.columnCurrentTestComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalAssertsCountColumn {
                get {
                    return this.columnTotalAssertsCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalAssertsFailedCountColumn {
                get {
                    return this.columnTotalAssertsFailedCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ThreadStatisticsRow this[int index] {
                get {
                    return ((ThreadStatisticsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ThreadStatisticsRowChangeEventHandler ThreadStatisticsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ThreadStatisticsRowChangeEventHandler ThreadStatisticsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ThreadStatisticsRowChangeEventHandler ThreadStatisticsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ThreadStatisticsRowChangeEventHandler ThreadStatisticsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddThreadStatisticsRow(ThreadStatisticsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ThreadStatisticsRow AddThreadStatisticsRow(string ThreadID, string CurrentTestType, string CurrentTestClass, string CurrentTestMethod, string CurrentTestComment, int TotalAssertsCount, int TotalAssertsFailedCount) {
                ThreadStatisticsRow rowThreadStatisticsRow = ((ThreadStatisticsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ThreadID,
                        CurrentTestType,
                        CurrentTestClass,
                        CurrentTestMethod,
                        CurrentTestComment,
                        TotalAssertsCount,
                        TotalAssertsFailedCount};
                rowThreadStatisticsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowThreadStatisticsRow);
                return rowThreadStatisticsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ThreadStatisticsRow FindByThreadID(string ThreadID) {
                return ((ThreadStatisticsRow)(this.Rows.Find(new object[] {
                            ThreadID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ThreadStatisticsDataTable cln = ((ThreadStatisticsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ThreadStatisticsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnThreadID = base.Columns["ThreadID"];
                this.columnCurrentTestType = base.Columns["CurrentTestType"];
                this.columnCurrentTestClass = base.Columns["CurrentTestClass"];
                this.columnCurrentTestMethod = base.Columns["CurrentTestMethod"];
                this.columnCurrentTestComment = base.Columns["CurrentTestComment"];
                this.columnTotalAssertsCount = base.Columns["TotalAssertsCount"];
                this.columnTotalAssertsFailedCount = base.Columns["TotalAssertsFailedCount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnThreadID = new global::System.Data.DataColumn("ThreadID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThreadID);
                this.columnCurrentTestType = new global::System.Data.DataColumn("CurrentTestType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentTestType);
                this.columnCurrentTestClass = new global::System.Data.DataColumn("CurrentTestClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentTestClass);
                this.columnCurrentTestMethod = new global::System.Data.DataColumn("CurrentTestMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentTestMethod);
                this.columnCurrentTestComment = new global::System.Data.DataColumn("CurrentTestComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentTestComment);
                this.columnTotalAssertsCount = new global::System.Data.DataColumn("TotalAssertsCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAssertsCount);
                this.columnTotalAssertsFailedCount = new global::System.Data.DataColumn("TotalAssertsFailedCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAssertsFailedCount);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnThreadID}, true));
                this.columnThreadID.AllowDBNull = false;
                this.columnThreadID.Unique = true;
                this.columnCurrentTestType.AllowDBNull = false;
                this.columnCurrentTestClass.AllowDBNull = false;
                this.columnCurrentTestMethod.AllowDBNull = false;
                this.columnCurrentTestComment.Caption = "CurrentTestMethod";
                this.columnTotalAssertsCount.Caption = "TotalAsserts";
                this.columnTotalAssertsCount.DefaultValue = ((int)(0));
                this.columnTotalAssertsFailedCount.Caption = "TotalAsserts";
                this.columnTotalAssertsFailedCount.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ThreadStatisticsRow NewThreadStatisticsRow() {
                return ((ThreadStatisticsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ThreadStatisticsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ThreadStatisticsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ThreadStatisticsRowChanged != null)) {
                    this.ThreadStatisticsRowChanged(this, new ThreadStatisticsRowChangeEvent(((ThreadStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ThreadStatisticsRowChanging != null)) {
                    this.ThreadStatisticsRowChanging(this, new ThreadStatisticsRowChangeEvent(((ThreadStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ThreadStatisticsRowDeleted != null)) {
                    this.ThreadStatisticsRowDeleted(this, new ThreadStatisticsRowChangeEvent(((ThreadStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ThreadStatisticsRowDeleting != null)) {
                    this.ThreadStatisticsRowDeleting(this, new ThreadStatisticsRowChangeEvent(((ThreadStatisticsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveThreadStatisticsRow(ThreadStatisticsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UnitTestOverviewDataSet ds = new UnitTestOverviewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ThreadStatisticsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UnitTestResultRow : global::System.Data.DataRow {
            
            private UnitTestResultDataTable tableUnitTestResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal UnitTestResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUnitTestResult = ((UnitTestResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TestType {
                get {
                    return ((string)(this[this.tableUnitTestResult.TestTypeColumn]));
                }
                set {
                    this[this.tableUnitTestResult.TestTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TestClass {
                get {
                    return ((string)(this[this.tableUnitTestResult.TestClassColumn]));
                }
                set {
                    this[this.tableUnitTestResult.TestClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TestMethod {
                get {
                    return ((string)(this[this.tableUnitTestResult.TestMethodColumn]));
                }
                set {
                    this[this.tableUnitTestResult.TestMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TotalTestTypeCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.TotalTestTypeCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTestTypeCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.TotalTestTypeCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TotalTestClassCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.TotalTestClassCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTestClassCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.TotalTestClassCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TotalTestMethodCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.TotalTestMethodCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTestMethodCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.TotalTestMethodCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TotalTestMethodPassedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.TotalTestMethodPassedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTestMethodPassedCount\' in table \'UnitTestResult\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.TotalTestMethodPassedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TotalTestMethodFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.TotalTestMethodFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTestMethodFailedCount\' in table \'UnitTestResult\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.TotalTestMethodFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TotalTestMethodTimeoutCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.TotalTestMethodTimeoutCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTestMethodTimeoutCount\' in table \'UnitTestResult\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.TotalTestMethodTimeoutCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TotalAssertsCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.TotalAssertsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAssertsCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.TotalAssertsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TotalAssertsFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.TotalAssertsFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAssertsFailedCount\' in table \'UnitTestResult\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.TotalAssertsFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AreEqualCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.AreEqualCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreEqualCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.AreEqualCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AreEqualFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.AreEqualFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreEqualFailedCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.AreEqualFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AreNotEqualCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.AreNotEqualCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreNotEqualCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.AreNotEqualCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AreNotEqualFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.AreNotEqualFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreNotEqualFailedCount\' in table \'UnitTestResult\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.AreNotEqualFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AreNotSameCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.AreNotSameCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreNotSameCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.AreNotSameCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AreNotSameFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.AreNotSameFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreNotSameFailedCount\' in table \'UnitTestResult\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.AreNotSameFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AreSameCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.AreSameCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreSameCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.AreSameCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AreSameFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.AreSameFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreSameFailedCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.AreSameFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int ExceptionAssertCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.ExceptionAssertCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExceptionAssertCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.ExceptionAssertCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int FailCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.FailCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FailCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.FailCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int FailFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.FailFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FailFailedCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.FailFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int InconclusiveCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.InconclusiveCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InconclusiveCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.InconclusiveCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsFalseCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsFalseCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsFalseCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsFalseCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsFalseFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsFalseFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsFalseFailedCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsFalseFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsInstanceOfTypeCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsInstanceOfTypeCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsInstanceOfTypeCount\' in table \'UnitTestResult\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsInstanceOfTypeCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsInstanceOfTypeFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsInstanceOfTypeFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsInstanceOfTypeFailedCount\' in table \'UnitTestResult\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsInstanceOfTypeFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsNotInstanceOfTypeCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsNotInstanceOfTypeCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNotInstanceOfTypeCount\' in table \'UnitTestResult\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsNotInstanceOfTypeCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsNotInstanceOfTypeFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsNotInstanceOfTypeFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNotInstanceOfTypeFailedCount\' in table \'UnitTestResult\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsNotInstanceOfTypeFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsNotNullCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsNotNullCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNotNullCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsNotNullCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsNotNullFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsNotNullFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNotNullFailedCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsNotNullFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsNullCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsNullCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNullCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsNullCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsNullFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsNullFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNullFailedCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsNullFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsTrueCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsTrueCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTrueCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsTrueCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IsTrueFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableUnitTestResult.IsTrueFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTrueFailedCount\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.IsTrueFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime StartDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUnitTestResult.StartDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDateTime\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.StartDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EndDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUnitTestResult.EndDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDateTime\' in table \'UnitTestResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.EndDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double DurationInMilliSeconds {
                get {
                    try {
                        return ((double)(this[this.tableUnitTestResult.DurationInMilliSecondsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DurationInMilliSeconds\' in table \'UnitTestResult\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableUnitTestResult.DurationInMilliSecondsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalTestTypeCountNull() {
                return this.IsNull(this.tableUnitTestResult.TotalTestTypeCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalTestTypeCountNull() {
                this[this.tableUnitTestResult.TotalTestTypeCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalTestClassCountNull() {
                return this.IsNull(this.tableUnitTestResult.TotalTestClassCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalTestClassCountNull() {
                this[this.tableUnitTestResult.TotalTestClassCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalTestMethodCountNull() {
                return this.IsNull(this.tableUnitTestResult.TotalTestMethodCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalTestMethodCountNull() {
                this[this.tableUnitTestResult.TotalTestMethodCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalTestMethodPassedCountNull() {
                return this.IsNull(this.tableUnitTestResult.TotalTestMethodPassedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalTestMethodPassedCountNull() {
                this[this.tableUnitTestResult.TotalTestMethodPassedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalTestMethodFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.TotalTestMethodFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalTestMethodFailedCountNull() {
                this[this.tableUnitTestResult.TotalTestMethodFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalTestMethodTimeoutCountNull() {
                return this.IsNull(this.tableUnitTestResult.TotalTestMethodTimeoutCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalTestMethodTimeoutCountNull() {
                this[this.tableUnitTestResult.TotalTestMethodTimeoutCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalAssertsCountNull() {
                return this.IsNull(this.tableUnitTestResult.TotalAssertsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalAssertsCountNull() {
                this[this.tableUnitTestResult.TotalAssertsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalAssertsFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.TotalAssertsFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalAssertsFailedCountNull() {
                this[this.tableUnitTestResult.TotalAssertsFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAreEqualCountNull() {
                return this.IsNull(this.tableUnitTestResult.AreEqualCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAreEqualCountNull() {
                this[this.tableUnitTestResult.AreEqualCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAreEqualFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.AreEqualFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAreEqualFailedCountNull() {
                this[this.tableUnitTestResult.AreEqualFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAreNotEqualCountNull() {
                return this.IsNull(this.tableUnitTestResult.AreNotEqualCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAreNotEqualCountNull() {
                this[this.tableUnitTestResult.AreNotEqualCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAreNotEqualFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.AreNotEqualFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAreNotEqualFailedCountNull() {
                this[this.tableUnitTestResult.AreNotEqualFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAreNotSameCountNull() {
                return this.IsNull(this.tableUnitTestResult.AreNotSameCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAreNotSameCountNull() {
                this[this.tableUnitTestResult.AreNotSameCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAreNotSameFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.AreNotSameFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAreNotSameFailedCountNull() {
                this[this.tableUnitTestResult.AreNotSameFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAreSameCountNull() {
                return this.IsNull(this.tableUnitTestResult.AreSameCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAreSameCountNull() {
                this[this.tableUnitTestResult.AreSameCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAreSameFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.AreSameFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAreSameFailedCountNull() {
                this[this.tableUnitTestResult.AreSameFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsExceptionAssertCountNull() {
                return this.IsNull(this.tableUnitTestResult.ExceptionAssertCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetExceptionAssertCountNull() {
                this[this.tableUnitTestResult.ExceptionAssertCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFailCountNull() {
                return this.IsNull(this.tableUnitTestResult.FailCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFailCountNull() {
                this[this.tableUnitTestResult.FailCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFailFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.FailFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFailFailedCountNull() {
                this[this.tableUnitTestResult.FailFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInconclusiveCountNull() {
                return this.IsNull(this.tableUnitTestResult.InconclusiveCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInconclusiveCountNull() {
                this[this.tableUnitTestResult.InconclusiveCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsFalseCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsFalseCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsFalseCountNull() {
                this[this.tableUnitTestResult.IsFalseCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsFalseFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsFalseFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsFalseFailedCountNull() {
                this[this.tableUnitTestResult.IsFalseFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsInstanceOfTypeCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsInstanceOfTypeCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsInstanceOfTypeCountNull() {
                this[this.tableUnitTestResult.IsInstanceOfTypeCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsInstanceOfTypeFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsInstanceOfTypeFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsInstanceOfTypeFailedCountNull() {
                this[this.tableUnitTestResult.IsInstanceOfTypeFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsNotInstanceOfTypeCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsNotInstanceOfTypeCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsNotInstanceOfTypeCountNull() {
                this[this.tableUnitTestResult.IsNotInstanceOfTypeCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsNotInstanceOfTypeFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsNotInstanceOfTypeFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsNotInstanceOfTypeFailedCountNull() {
                this[this.tableUnitTestResult.IsNotInstanceOfTypeFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsNotNullCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsNotNullCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsNotNullCountNull() {
                this[this.tableUnitTestResult.IsNotNullCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsNotNullFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsNotNullFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsNotNullFailedCountNull() {
                this[this.tableUnitTestResult.IsNotNullFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsNullCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsNullCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsNullCountNull() {
                this[this.tableUnitTestResult.IsNullCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsNullFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsNullFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsNullFailedCountNull() {
                this[this.tableUnitTestResult.IsNullFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsTrueCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsTrueCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsTrueCountNull() {
                this[this.tableUnitTestResult.IsTrueCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIsTrueFailedCountNull() {
                return this.IsNull(this.tableUnitTestResult.IsTrueFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIsTrueFailedCountNull() {
                this[this.tableUnitTestResult.IsTrueFailedCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStartDateTimeNull() {
                return this.IsNull(this.tableUnitTestResult.StartDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStartDateTimeNull() {
                this[this.tableUnitTestResult.StartDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEndDateTimeNull() {
                return this.IsNull(this.tableUnitTestResult.EndDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEndDateTimeNull() {
                this[this.tableUnitTestResult.EndDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDurationInMilliSecondsNull() {
                return this.IsNull(this.tableUnitTestResult.DurationInMilliSecondsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDurationInMilliSecondsNull() {
                this[this.tableUnitTestResult.DurationInMilliSecondsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UnitTestDetailRow : global::System.Data.DataRow {
            
            private UnitTestDetailDataTable tableUnitTestDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal UnitTestDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUnitTestDetail = ((UnitTestDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ThreadID {
                get {
                    try {
                        return ((string)(this[this.tableUnitTestDetail.ThreadIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThreadID\' in table \'UnitTestDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestDetail.ThreadIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TestType {
                get {
                    return ((string)(this[this.tableUnitTestDetail.TestTypeColumn]));
                }
                set {
                    this[this.tableUnitTestDetail.TestTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TestClass {
                get {
                    return ((string)(this[this.tableUnitTestDetail.TestClassColumn]));
                }
                set {
                    this[this.tableUnitTestDetail.TestClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TestMethod {
                get {
                    return ((string)(this[this.tableUnitTestDetail.TestMethodColumn]));
                }
                set {
                    this[this.tableUnitTestDetail.TestMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AssertType {
                get {
                    return ((string)(this[this.tableUnitTestDetail.AssertTypeColumn]));
                }
                set {
                    this[this.tableUnitTestDetail.AssertTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool WasSuccessful {
                get {
                    try {
                        return ((bool)(this[this.tableUnitTestDetail.WasSuccessfulColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WasSuccessful\' in table \'UnitTestDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestDetail.WasSuccessfulColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableUnitTestDetail.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'UnitTestDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUnitTestDetail.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsThreadIDNull() {
                return this.IsNull(this.tableUnitTestDetail.ThreadIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetThreadIDNull() {
                this[this.tableUnitTestDetail.ThreadIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWasSuccessfulNull() {
                return this.IsNull(this.tableUnitTestDetail.WasSuccessfulColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWasSuccessfulNull() {
                this[this.tableUnitTestDetail.WasSuccessfulColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommentNull() {
                return this.IsNull(this.tableUnitTestDetail.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommentNull() {
                this[this.tableUnitTestDetail.CommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ThreadStatisticsRow : global::System.Data.DataRow {
            
            private ThreadStatisticsDataTable tableThreadStatistics;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ThreadStatisticsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableThreadStatistics = ((ThreadStatisticsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ThreadID {
                get {
                    return ((string)(this[this.tableThreadStatistics.ThreadIDColumn]));
                }
                set {
                    this[this.tableThreadStatistics.ThreadIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CurrentTestType {
                get {
                    return ((string)(this[this.tableThreadStatistics.CurrentTestTypeColumn]));
                }
                set {
                    this[this.tableThreadStatistics.CurrentTestTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CurrentTestClass {
                get {
                    return ((string)(this[this.tableThreadStatistics.CurrentTestClassColumn]));
                }
                set {
                    this[this.tableThreadStatistics.CurrentTestClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CurrentTestMethod {
                get {
                    return ((string)(this[this.tableThreadStatistics.CurrentTestMethodColumn]));
                }
                set {
                    this[this.tableThreadStatistics.CurrentTestMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CurrentTestComment {
                get {
                    try {
                        return ((string)(this[this.tableThreadStatistics.CurrentTestCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentTestComment\' in table \'ThreadStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThreadStatistics.CurrentTestCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TotalAssertsCount {
                get {
                    try {
                        return ((int)(this[this.tableThreadStatistics.TotalAssertsCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAssertsCount\' in table \'ThreadStatistics\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThreadStatistics.TotalAssertsCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int TotalAssertsFailedCount {
                get {
                    try {
                        return ((int)(this[this.tableThreadStatistics.TotalAssertsFailedCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAssertsFailedCount\' in table \'ThreadStatistics\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableThreadStatistics.TotalAssertsFailedCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCurrentTestCommentNull() {
                return this.IsNull(this.tableThreadStatistics.CurrentTestCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCurrentTestCommentNull() {
                this[this.tableThreadStatistics.CurrentTestCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalAssertsCountNull() {
                return this.IsNull(this.tableThreadStatistics.TotalAssertsCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalAssertsCountNull() {
                this[this.tableThreadStatistics.TotalAssertsCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalAssertsFailedCountNull() {
                return this.IsNull(this.tableThreadStatistics.TotalAssertsFailedCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalAssertsFailedCountNull() {
                this[this.tableThreadStatistics.TotalAssertsFailedCountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class UnitTestResultRowChangeEvent : global::System.EventArgs {
            
            private UnitTestResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestResultRowChangeEvent(UnitTestResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class UnitTestDetailRowChangeEvent : global::System.EventArgs {
            
            private UnitTestDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestDetailRowChangeEvent(UnitTestDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public UnitTestDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ThreadStatisticsRowChangeEvent : global::System.EventArgs {
            
            private ThreadStatisticsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ThreadStatisticsRowChangeEvent(ThreadStatisticsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ThreadStatisticsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591